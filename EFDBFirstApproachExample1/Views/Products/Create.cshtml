@model EFDBFirstApproachExample1.Models.Product
@using EFDBFirstApproachExample1.HtmlHelpers

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<h2>Create Product</h2>

@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    <div class="form-row">
        <div class="form-group col-md-6">
            @Html.LabelFor(temp => temp.ProductName)
            @Html.TextBoxFor(temp => temp.ProductName, new { placeholder = "ProductName", @class = "form-control" })
            @Html.ValidationMessageFor(temp =>temp.ProductName)
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(temp => temp.Price)
            @Html.TextBoxFor(temp => temp.Price, new { placeholder = "Price", @class = "form-control" })
            @Html.ValidationMessageFor(temp => temp.Price)
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6">
            @Html.LabelFor(temp => temp.DateOfPurchase)
            @Html.TextBoxFor(temp => temp.DateOfPurchase, new { placeholder = "Date Of Purchase", @class = "form-control" })
            @Html.ValidationMessageFor(temp => temp.DateOfPurchase)
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(temp => temp.AvailabilityStatus, new { @class = "form-check-label" })
            <br />
            @Html.RadioButtonFor(temp => temp.AvailabilityStatus, "InStock", new { @class = "form-check-input" })InStock
            <br />
            @Html.RadioButtonFor(temp => temp.AvailabilityStatus, "OutOfStock", new { @class = "form-check-input" })Out Of Stock
            <br />
            @Html.ValidationMessageFor(temp => temp.AvailabilityStatus)
            <br />
            @*@Html.DropDownListFor(temp => temp.AvailabilityStatus,new List<SelectListItem>() {
        new SelectListItem(){Text="In Stock",Value="InStock"},
        new SelectListItem(){Text="Out Of Stock",Value="OutOfStock"}
        },"Please Select",new {@class="form-control"})
            *@

        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6">

            @Html.LabelFor(temp => temp.CategoryID)
            @Html.DropDownListFor(temp => temp.CategoryID, new SelectList(ViewBag.categories, "CategoryID", "CategoryName"), "Please Select", new { @class = "form-control" })
            @Html.ValidationMessageFor(temp => temp.CategoryID)

        </div>

        <div class="form-group">
            <label for="Image">Image</label>
            @Html.File("form-control-file")
            @Html.ValidationMessageFor(temp => temp.Photo)
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(temp => temp.BrandID)
            @Html.DropDownListFor(temp => temp.BrandID, new SelectList(ViewBag.brands, "BrandID", "BrandName"), "Please Select", new { @class = "form-control" })
            @Html.ValidationMessageFor(temp => temp.BrandID)
        </div>
    </div>

    <Div class="form-group">
        <div class="form-check">
            @Html.CheckBoxFor(temp => temp.Active.Value, new { @class = "form-check-input", value = true })
            @Html.LabelFor(temp => temp.Active, new { @class = "form-check-label" })
            @Html.ValidationMessageFor(temp => temp.Active)
        </div>
    </Div>

    @Html.ValidationSummary()
    <button type="submit" class="btn btn-success">SAVE</button>
    @Html.ActionLink("CANCEL", "index", new { controller = "Products" }, new { @class = "btn btn-primary btnStyle" })
    @*<a class="btn btn-danger" href="/products/index">CANCEL</a>*@



}

